     1                                  
     2                                  section .data
     3                                  
     4 00000000 D092D0B2D0B5D0B4D0-        message1:  db "Введите a или b",0xa,0  ;сообщение вопроса, адрес начала строки
     4 00000009 B8D182D0B5206120D0-
     4 00000012 B8D0BBD0B820620A00 
     5                                     ln1 equ $-message1                              ;длина сообщения
     6                                                                                     ;0xa - перенос строки
     7                                                                                     ;0 - не обязателен, но иногда может понадобиться, например при работе с C
     8                                  
     9 0000001B D092D18B20D0B2D0B2-        message2: db "Вы ввели a!",0xa,0               ;сообщение ответа, адрес начала строки
     9 00000024 D0B5D0BBD0B8206121-
     9 0000002D 0A00               
    10                                     ln2 equ $-message2                          ;длина сообщения
    11                                  
    12 0000002F D092D18B20D0B2D0B2-        message3:  db "Вы ввели b!",0xa,0               ;сообщение ответа, адрес начала строки
    12 00000038 D0B5D0BBD0B8206221-
    12 00000041 0A00               
    13                                     ln3 equ $-message3                          ;длина сообщения
    14                                  
    15 00000043 <res 00000001>             enter: resb 1                                ;выделение памяти в 1 байт переменной enter
    15          ******************       warning: uninitialized space declared in non-BSS section `.data': zeroing
    16                                     lne equ $-enter                            ;длина сообщения
    17                                  
    18                                  
    19                                  ;начало самой программы
    20                                  section .text
    21                                     global _start
    22                                     _start:
    23                                  again:
    24                                  ;действия для вывода содержимого по умолчанию с началом в ecx, с длиной edx - вывод вопроса
    25 00000000 B9[00000000]            mov ecx, message1       ;в ecx помещается адрес первого символа переменной
    26 00000005 BA1B000000              mov edx, ln1            ;в edx помещается количество символов в переменной
    27 0000000A B804000000              mov eax,4       ;эта строка №1 обязательна для вывода!
    28 0000000F BB01000000              mov ebx,1       ;эта строка №2 обязательна для вывода!
    29 00000014 CD80                    int 0x80        ;эта строка №3 обязательна для вывода!
    30                                  
    31                                  ;действия для ввода содержимого по умолчанию с началом в ecx, с длиной edx - ввод ответа
    32 00000016 B803000000              mov eax, 3         ;эта строка №1 обязательна для ввода!
    33 0000001B BB00000000              mov ebx, 0         ;эта строка №2 обязательна для ввода!
    34                                  
    35 00000020 B9[43000000]            mov ecx, enter   ;в ecx помещается адрес первого символа из enter
    36 00000025 BA01000000              mov edx, lne       ;в edx помещается количество символов в переменной, остальные заполнятся нулями
    37                                  
    38 0000002A CD80                    int 0x80           ;эта строка №3 обязательна для ввода!
    39                                  
    40                                  ;действия для сравнения содержимого
    41 0000002C 67803961                cmp byte [ecx], 'a';при вводе данных через клавиатуру в ecx помещается адрес первого символа из всех существующих
    42                                                         ;поэтому при выводе надо указывать ecx в квадратных скобках, так как это адрес символа  [ecx]
    43                                                         ;и обязательно указывать размер, в данном случае byte, так как изначально резервировался размер в байтах resb
    44                                  
    45                                  
    46 00000030 7402                       je m1                 ;если введено a
    47 00000032 750C                       jne m2                 ;если введено не a
    48                                  
    49                                  m1:                      ;переходит сюда, если введено a
    50                                  
    51 00000034 B9[1B000000]               mov ecx,message2
    52 00000039 BA14000000                 mov edx,ln2
    53 0000003E EB12                       jmp exit              ;переход к метке exit
    54                                  
    55                                  
    56                                  m2:                    ;переходит сюда, если введено не a
    57 00000040 67803962                cmp byte [ecx], 'b'    ;при вводе данных через клавиатуру в ecx помещается адрес первого символа из всех существующих
    58 00000044 7402                    je m3                  ;если введено b
    59 00000046 75B8                    jne again                 ;переход к метке again, если введено не b
    60                                  
    61                                  m3:
    62 00000048 B9[2F000000]               mov ecx,message3
    63 0000004D BA14000000                 mov edx,ln3
    64                                     ;jmp exit              ;переход к метке exit, (тут в принципе прыгать не надо)
    65                                  
    66                                  
    67                                  
    68                                  exit:
    69                                  ;вывод содержимого ecx
    70 00000052 B804000000              mov eax,4       ;эта строка №1 обязательна для вывода!
    71 00000057 BB01000000              mov ebx,1       ;эта строка №2 обязательна для вывода!
    72 0000005C CD80                    int 0x80        ;эта строка №3 обязательна для вывода!
    73                                  
    74 0000005E 66B80100                mov ax,1             ;выход
    75 00000062 CD80                       int 0x80
